{"version":3,"file":"static/js/634.4bd7538a.chunk.js","mappings":"qNAQA,MAAMA,EAAM,IAAIC,EAAAA,GAAU,CAAEC,GAAIC,0BAsEhC,EArEkBC,KAChB,MAAOC,EAAOC,IAAYC,EAAAA,EAAAA,WAAS,IAC5BC,EAAYC,IAAiBF,EAAAA,EAAAA,UAAS,IAkC7C,OACEG,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,SACGP,GACCQ,EAAAA,EAAAA,MAAA,OAAKC,UAAU,2BAA0BF,SAAA,EACvCF,EAAAA,EAAAA,KAAA,SACEK,KAAK,OACLC,YAAY,kBACZC,MAAOT,EACPU,SArBiBC,IACzBV,EAAcU,EAAMC,OAAOH,MAAM,EAqBzBH,UAAU,kBAEZJ,EAAAA,EAAAA,KAAA,UAAQW,QApBWC,UACzB,UACQtB,EAAIuB,kBAAkBC,uBAAuB,CAAEhB,cACvD,CAAE,MAAOiB,GACPC,QAAQC,IAAIF,EAAMA,MACpB,GAe0CX,UAAU,eAAcF,SAAC,wBAK/DC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,iBAAgBF,SAAA,EAC7BF,EAAAA,EAAAA,KAACkB,EAAAA,GAAI,CACDC,OAAQC,EAAAA,GAAAA,EACRC,SAAUD,EAAAA,GAAAA,EACZE,UAAWA,EAAAA,GACXC,SArDOX,UAAyB,IAAlB,SAAEY,GAAUC,EAElC,MAAM,MAAEC,EAAK,SAAEC,GAAaH,EACtBI,EAAcrC,EAAAA,GAAkBsC,cAAcH,EAAOC,GAE3D,IAE2B,iBADPrC,EAAIwC,MAAMF,IACrBG,WAAW1B,KAClB2B,OAAOC,SAASC,KAAK,mBAE1BF,OAAOC,SAASC,KAAK,YAElB,CAAE,MAAOnB,GACPC,QAAQC,IAAIF,EAAMA,MACpB,MAyCMZ,EAAAA,EAAAA,MAAA,OAAKC,UAAU,mBAAkBF,SAAA,EAC/BF,EAAAA,EAAAA,KAACmC,EAAAA,GAAI,CAACC,GAAG,sBAAsBhC,UAAU,OAAMF,SAAC,cAChDF,EAAAA,EAAAA,KAACmC,EAAAA,GAAI,CAACxB,QAASA,IAAMf,GAAS,GAAOQ,UAAU,OAAMF,SAAC,0BAI3D,C","sources":["components/login/Login.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport Form from '@rjsf/core';\r\nimport validator from '@rjsf/validator-ajv8';\r\nimport * as Realm from \"realm-web\";\r\nimport { Link } from 'react-router-dom';\r\nimport '../form.css';\r\nimport formConfig from '../../formConfig.json';\r\n// Add your App ID\r\nconst app = new Realm.App({ id: process.env.REACT_APP_KEY });\r\nconst LoginForm = () => {\r\n  const [state, setState] = useState(false);\r\n  const [inputValue, setInputValue] = useState('');\r\n  \r\n  const onSubmit = async ({ formData }) => {\r\n    // Create an email/password credential\r\n    const { email, password } = formData;\r\n    const credentials = Realm.Credentials.emailPassword(email, password);\r\n    // Authenticate the user\r\n    try {\r\n     const user=  await app.logIn(credentials);\r\n     if(user.customData.type===\"Admin\"){\r\n      window.location.href='/octoprint/admin'\r\n     }else{\r\n window.location.href='/octoprint'\r\n     }\r\n    } catch (error) {\r\n      console.log(error.error)\r\n    }\r\n    \r\n  \r\n  };\r\n\r\n  const handleInputChange = (event) => {\r\n    setInputValue(event.target.value);\r\n  };\r\n\r\n  const handleButtonClick  = async () => {\r\n    try {\r\n      await app.emailPasswordAuth.sendResetPasswordEmail({ inputValue });\r\n    } catch (error) {\r\n      console.log(error.error)\r\n    }\r\n   \r\n  };\r\n\r\n  return (\r\n    <>\r\n      {state ? (\r\n        <div className=\"reset-password-container\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Enter text here\"\r\n            value={inputValue}\r\n            onChange={handleInputChange}\r\n            className=\"form-control\"\r\n          />\r\n          <button onClick={handleButtonClick} className=\"btn btn-info\">\r\n            Log Input Value\r\n          </button>\r\n        </div>\r\n      ) : (\r\n        <div className=\"form-container\">\r\n          <Form\r\n              schema={formConfig.login.schema}\r\n              uiSchema={formConfig.login.uiSchema}\r\n            validator={validator}\r\n            onSubmit={onSubmit}\r\n          />\r\n          <div className=\"additional-links\">\r\n            <Link to=\"/octoprint/register\" className=\"link\">Register</Link>\r\n            <Link onClick={() => setState(true)} className=\"link\">Reset Password</Link>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LoginForm;\r\n"],"names":["app","Realm","id","process","LoginForm","state","setState","useState","inputValue","setInputValue","_jsx","_Fragment","children","_jsxs","className","type","placeholder","value","onChange","event","target","onClick","async","emailPasswordAuth","sendResetPasswordEmail","error","console","log","Form","schema","formConfig","uiSchema","validator","onSubmit","formData","_ref","email","password","credentials","emailPassword","logIn","customData","window","location","href","Link","to"],"sourceRoot":""}